

resource "vsphere_virtual_machine" "external_gw" {
  count = var.deployment == "vsphere_wo_nsx" ? 1 : 0
  name             = "external-gw-${var.date_index}"
  datastore_id     = data.vsphere_datastore.datastore.id
  resource_pool_id = data.vsphere_resource_pool.pool.id
  folder           = "/${var.vsphere_underlay.datacenter}/vm/${var.vsphere_underlay.folder}"

  network_interface {
    network_id = data.vsphere_network.vsphere_underlay_network_mgmt.id
  }

  //  network_interface {
  //    network_id = data.vsphere_network.vsphere_underlay_network_external.id
  //  }

  num_cpus = var.cpu
  memory = var.memory
  guest_id = "ubuntu64Guest"

  disk {
    size             = var.disk
    label            = "external-gw-${var.date_index}.lab_vmdk"
    thin_provisioned = true
  }

  cdrom {
    client_device = true
  }

  clone {
    template_uuid = vsphere_content_library_item.file_external_gw[0].id
  }

  vapp {
    properties = {
      hostname    = "external-gw-${var.date_index}"
      public-keys = file("/root/.ssh/id_rsa.pub")
      user-data   = base64encode(data.template_file.external_gw_userdata[0].rendered)
    }
  }

  connection {
    host        = var.vsphere_underlay.networks.vsphere.management.external_gw_ip
    type        = "ssh"
    agent       = false
    user        = "ubuntu"
    private_key = file("/root/.ssh/id_rsa")
  }

  provisioner "remote-exec" {
    inline      = [
      "while [ ! -f /tmp/cloudInitDone.log ]; do sleep 1; done"
    ]
  }
}

resource "null_resource" "end" {

  provisioner "local-exec" {
    interpreter = ["bash", "-c"]
    command = "echo 'dummy step'"
  }
}
